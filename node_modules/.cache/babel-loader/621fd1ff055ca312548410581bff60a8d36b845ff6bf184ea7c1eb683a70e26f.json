{"ast":null,"code":"import Vue from 'vue';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n/** Define a default action to perform after authentication */\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\nlet instance;\n\n/** Returns the current instance of the SDK */\nexport const getInstance = () => instance;\n\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = window.location.origin,\n  ...options\n}) => {\n  if (instance) return instance;\n\n  // The 'instance' is simply a Vue object\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(o) {\n        this.popupOpen = true;\n        try {\n          await this.auth0Client.loginWithPopup(o);\n        } catch (e) {\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n      /** Gets the access token using a popup window */\n\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n    },\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        domain: options.domain,\n        client_id: options.clientId,\n        audience: options.audience,\n        redirect_uri: redirectUri\n      });\n      try {\n        // If the user is returning to the app after authentication..\n        if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\n          // handle the redirect and retrieve tokens\n          const {\n            appState\n          } = await this.auth0Client.handleRedirectCallback();\n\n          // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize the internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n  });\n  return instance;\n};\n\n// Create a simple Vue plugin to expose the wrapper object throughout the application\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n};","map":{"version":3,"names":["Vue","createAuth0Client","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","instance","getInstance","useAuth0","onRedirectCallback","redirectUri","origin","options","data","loading","isAuthenticated","user","auth0Client","popupOpen","error","methods","loginWithPopup","o","e","console","getUser","handleRedirectCallback","loginWithRedirect","getIdTokenClaims","getTokenSilently","getTokenWithPopup","logout","created","domain","client_id","clientId","audience","redirect_uri","search","includes","appState","Auth0Plugin","install","prototype","$auth"],"sources":["/Users/trevs/Schoolwork/CBAM-app/auth/index.js"],"sourcesContent":["import Vue from 'vue';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n/** Define a default action to perform after authentication */\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nlet instance;\n\n/** Returns the current instance of the SDK */\nexport const getInstance = () => instance;\n\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = window.location.origin,\n  ...options\n}) => {\n  if (instance) return instance;\n\n  // The 'instance' is simply a Vue object\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null,\n      };\n    },\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(o) {\n        this.popupOpen = true;\n\n        try {\n          await this.auth0Client.loginWithPopup(o);\n        } catch (e) {\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n      /** Gets the access token using a popup window */\n\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      },\n    },\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        domain: options.domain,\n        client_id: options.clientId,\n        audience: options.audience,\n        redirect_uri: redirectUri,\n      });\n\n      try {\n        // If the user is returning to the app after authentication..\n        if (\n          window.location.search.includes('code=') &&\n          window.location.search.includes('state=')\n        ) {\n          // handle the redirect and retrieve tokens\n          const { appState } = await this.auth0Client.handleRedirectCallback();\n\n          // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize the internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    },\n  });\n\n  return instance;\n};\n\n// Create a simple Vue plugin to expose the wrapper object throughout the application\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  },\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}