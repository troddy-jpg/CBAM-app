{"ast":null,"code":"import axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-vue';\nexport default {\n  auth0: useAuth0,\n  name: 'SingleEssayView',\n  data() {\n    return {\n      essay: {\n        title: \"\",\n        content: \"\",\n        user_email: \"\"\n      },\n      loading: true,\n      errored: false,\n      user: this.$auth0.user,\n      isAuthenticated: this.$auth0.isAuthenticated,\n      isOwner: false,\n      essayLines: {},\n      selectedLine: -1,\n      newCommentContent: \"\"\n    };\n  },\n  mounted() {\n    this.loadEssay();\n    this.checkOwnership();\n    this.loadComments();\n  },\n  methods: {\n    loadEssay() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id).then(response => {\n        console.log(response.data);\n        this.essay = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n        this.parseContent();\n        this.checkOwnership();\n      });\n    },\n    checkOwnership() {\n      //user/<email>/essays\n      axios.get('http://localhost:5000/user/' + this.user.email + '/essays').then(response => {\n        console.log(response.data);\n      });\n      console.log('me' + this.essay.user_email);\n    },\n    parseContent() {\n      this.essayLines = this.essay.content.split(\".\");\n      console.log(this.essayLines);\n    },\n    // openCommentsOnLine(lineNumber) {\n    //     console.log(lineNumber)\n    //     this.$router.push('/essay/' + this.essay.id+\"/\" + lineNumber)\n    // },\n    loadComments() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', {\n        email: this.user.email\n      }).then(response => {\n        console.log(response.data);\n        this.comments = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    postComment() {\n      axios.post('http://localhost:5000/comments', {\n        essay_id: this.$route.params.id,\n        user_email: this.user.email,\n        content: this.newCommentContent,\n        sentence: this.selectedLine\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        console.log(\"finally\");\n        this.loadComments();\n        this.$forceUpdate();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","useAuth0","auth0","name","data","essay","title","content","user_email","loading","errored","user","$auth0","isAuthenticated","isOwner","essayLines","selectedLine","newCommentContent","mounted","loadEssay","checkOwnership","loadComments","methods","get","$route","params","id","then","response","console","log","catch","error","finally","parseContent","email","split","comments","postComment","post","essay_id","sentence","$forceUpdate"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/SingleEssayView.vue"],"sourcesContent":["<template>\n    <h1>{{essay.title}}</h1>\n    <i>modified {{essay.date_modified}}, created {{essay.date_created}}, revision {{(essay.revision + 1)}}</i>\n    <div>\n        <span v-for=\"(line, index) in essayLines\" :key=\"index\">\n            <span @click=\"(selectedLine = index)\">{{line}}.</span>\n        </span>\n    </div>\n    <i>Essay by {{essay.user_email}}</i>\n    <h1 v-if=\"isOwner\">owner</h1>\n    <h2>Comments</h2>\n    <i>Click on a sentence / line to bring up it's comments. viewing: </i>\n    <div v-if=\"(selectedLine != -1)\">\n        <h1>{{selectedLine}}</h1>\n        <hr>\n        <div v-for=\"(comment) in comments\" :key=\"comment.sentence\">\n            <div v-if=\"(comment.sentence === selectedLine)\">\n            <label>{{ comment.content }}</label></div>\n        </div>\n        <input v-model=\"newCommentContent\" placeholder=\"new comment\" />\n        <button @click=\"postComment()\">Post comment</button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            essay: { title: \"\", content:\"\", user_email:\"\"},\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n            isOwner: false,\n            essayLines: {},\n            selectedLine: -1,\n            newCommentContent:\"\",\n        }\n    },\n    mounted() {\n        this.loadEssay()\n        this.checkOwnership()\n        this.loadComments()\n    },\n    methods: {\n        loadEssay() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id)\n                .then(response => {\n                    console.log(response.data)\n                    this.essay = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.parseContent()\n                    this.checkOwnership()\n                })\n        },\n        checkOwnership() {\n            //user/<email>/essays\n            axios\n                .get('http://localhost:5000/user/' + this.user.email + '/essays')\n                .then(response => {\n                    console.log(response.data)\n                })\n\n            console.log('me'+this.essay.user_email)\n        },\n        parseContent() {\n            this.essayLines = this.essay.content.split(\".\")\n            console.log(this.essayLines)\n        },\n        // openCommentsOnLine(lineNumber) {\n        //     console.log(lineNumber)\n        //     this.$router.push('/essay/' + this.essay.id+\"/\" + lineNumber)\n        // },\n        loadComments() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', { email: this.user.email })\n                .then(response => {\n                    console.log(response.data)\n                    this.comments = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                })\n        },\n        postComment() {\n            axios\n                .post('http://localhost:5000/comments', { essay_id: this.$route.params.id, user_email: this.user.email, content: this.newCommentContent, sentence: this.selectedLine })\n                .then(response => {\n                    console.log(response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                .finally(() => {\n                    console.log(\"finally\")\n                    this.loadComments()\n                    this.$forceUpdate()\n                })\n        },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}