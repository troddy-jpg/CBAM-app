{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  key: 3\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Comments\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"i\", null, \"Click on a sentence / line to bring up it's comments. viewing: \", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 4\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($data.essay.title), 1 /* TEXT */), _createElementVNode(\"i\", null, \"modified \" + _toDisplayString($data.essay.date_modified) + \", created \" + _toDisplayString($data.essay.date_created) + \", revision \" + _toDisplayString($data.essay.revision + 1), 1 /* TEXT */), !this.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.essayLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index\n    }, [_createElementVNode(\"span\", {\n      onClick: $event => $data.selectedLine = index\n    }, _toDisplayString(line) + \".\", 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), this.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newEssayTitle = $event),\n    placeholder: \"{{this.essay.title}}\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newEssayTitle]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.newEssayContent = $event),\n    placeholder: \"{{this.essay.content}}\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newEssayContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.rePostEssay())\n  }, \"Post Revision\")])) : _createCommentVNode(\"v-if\", true), !this.isOwner ? (_openBlock(), _createElementBlock(\"i\", _hoisted_4, \"Essay by \" + _toDisplayString($data.essay.user_email), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), this.isOwner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => this.editMode = true)\n  }, \"Edit essay\")])) : _createCommentVNode(\"v-if\", true), _hoisted_6, _hoisted_7, $data.selectedLine != -1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"h1\", null, _toDisplayString($data.selectedLine), 1 /* TEXT */), _hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.sentence\n    }, [comment.sentence === $data.selectedLine ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"label\", null, _toDisplayString(comment.content), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newCommentContent = $event),\n    placeholder: \"new comment\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.postComment())\n  }, \"Post comment\")])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;gCAiBIA,oBAAiB,YAAb,UAAQ;gCACZA,oBAAsE,WAAnE,iEAA+D;;;;gCAG9DA,oBAAI;;;;;6DApBRA,oBAAwB,6BAAlBC,WAAK,CAACC,KAAK,kBACjBF,oBAA0G,WAAvG,WAAS,oBAAEC,WAAK,CAACE,aAAa,IAAE,YAAU,oBAAEF,WAAK,CAACG,YAAY,IAAE,aAAW,oBAAGH,WAAK,CAACI,QAAQ,4BAC9EC,QAAQ,kBAAzBC,oBAIM,uCAHFA,oBAEOC,6BAFuBP,gBAAU,GAA1BQ,IAAI,EAAEC,KAAK;yBAAzBH,oBAEO;MAFoCI,GAAG,EAAED;IAAK,IACjDV,oBAAsD;MAA/CY,OAAK,YAAGX,kBAAY,GAAGS;wBAAUD,IAAI,IAAE,GAAC;8EAGvCH,QAAQ,kBAAxBC,oBAIM,oCAHFP,oBAAoE;+DAApDC,mBAAa;IAAEY,WAAW,EAAC;iDAA3BZ,mBAAa,qBAC7BD,oBAAwE;+DAAxDc,oBAAe;IAAED,WAAW,EAAC;iDAA7BC,oBAAe,KAC/Bd,oBAAqD;IAA5CY,OAAK,sCAAEG,oBAAW;KAAI,eAAa,gDAEjCC,OAAO,kBAAtBT,oBAAyD,iBAAjC,WAAS,oBAAEN,WAAK,CAACgB,UAAU,4DACnCD,OAAO,kBAAvBT,oBAEM,oBADFP,oBAA2D;IAAlDY,OAAK,2CAAQN,QAAQ;KAAU,YAAU,0CAEtDY,UAAiB,EACjBC,UAAsE,EAC1DlB,kBAAY,wBAAxBM,oBASM,oBARFP,oBAAyB,6BAAnBC,kBAAY,kBAClBmB,UAAI,qBACJb,oBAGMC,6BAHmBM,aAAQ,EAApBO,OAAO;yBAApBd,oBAGM;MAH8BI,GAAG,EAAEU,OAAO,CAACC;QACjCD,OAAO,CAACC,QAAQ,KAAKrB,kBAAY,kBAA7CM,oBAC0C,qBAA1CP,oBAAoC,gCAA1BqB,OAAO,CAACE,OAAO;kDAE7BvB,oBAA+D;+DAA/CC,uBAAiB;IAAEY,WAAW,EAAC;iDAA/BZ,uBAAiB,KACjCD,oBAAoD;IAA3CY,OAAK,sCAAEG,oBAAW;KAAI,cAAY","names":["_createElementVNode","$data","title","date_modified","date_created","revision","editMode","_createElementBlock","_Fragment","line","index","key","onClick","placeholder","_ctx","$options","isOwner","user_email","_hoisted_6","_hoisted_7","_hoisted_9","comment","sentence","content"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/SingleEssayView.vue"],"sourcesContent":["<template>\n    <h1>{{essay.title}}</h1>\n    <i>modified {{essay.date_modified}}, created {{essay.date_created}}, revision {{(essay.revision + 1)}}</i>\n    <div v-if=\"!this.editMode\">\n        <span v-for=\"(line, index) in essayLines\" :key=\"index\">\n            <span @click=\"(selectedLine = index)\">{{line}}.</span>\n        </span>\n    </div>\n    <div v-if=\"this.editMode\">\n        <input v-model=\"newEssayTitle\" placeholder=\"{{this.essay.title}}\" />\n        <input v-model=\"newEssayContent\" placeholder=\"{{this.essay.content}}\" />\n        <button @click=\"rePostEssay()\">Post Revision</button>\n    </div>\n    <i v-if=\"!this.isOwner\">Essay by {{essay.user_email}}</i>\n    <div v-if=\"this.isOwner\">\n        <button @click=\"(this.editMode = true)\">Edit essay</button>\n    </div>\n    <h2>Comments</h2>\n    <i>Click on a sentence / line to bring up it's comments. viewing: </i>\n    <div v-if=\"(selectedLine != -1)\">\n        <h1>{{selectedLine}}</h1>\n        <hr>\n        <div v-for=\"(comment) in comments\" :key=\"comment.sentence\">\n            <div v-if=\"(comment.sentence === selectedLine)\">\n            <label>{{ comment.content }}</label></div>\n        </div>\n        <input v-model=\"newCommentContent\" placeholder=\"new comment\" />\n        <button @click=\"postComment()\">Post comment</button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            essay: { title: \"\", content:\"\", user_email:\"\"},\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n            isOwner: false,\n            essayLines: {},\n            selectedLine: -1,\n            newCommentContent: \"\",\n            editMode: false,\n            newEssayTitle:\"\",\n            newessayContent:\"\",\n        }\n    },\n    mounted() {\n        this.loadEssay()\n    },\n    methods: {\n        loadEssay() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id)\n                .then(response => {\n                    console.log(response.data)\n                    this.essay = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.parseContent()\n                    this.checkOwnership()\n                    this.loadComments()\n                })\n        },\n        checkOwnership() {\n            this.isOwner = this.essay.user_email === this.user.email\n            console.log(this.isOwner)\n        },\n        parseContent() {\n            this.essayLines = this.essay.content.split(\".\")\n            console.log(this.essayLines)\n        },\n        // openCommentsOnLine(lineNumber) {\n        //     console.log(lineNumber)\n        //     this.$router.push('/essay/' + this.essay.id+\"/\" + lineNumber)\n        // },\n        loadComments() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', { email: this.user.email })\n                .then(response => {\n                    console.log(response.data)\n                    this.comments = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                })\n        },\n        postComment() {\n            axios\n                .post('http://localhost:5000/comments', { essay_id: this.$route.params.id, user_email: this.user.email, content: this.newCommentContent, sentence: this.selectedLine })\n                .then(response => {\n                    console.log(response.data)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                .finally(() => {\n                    console.log(\"finally\")\n                    this.loadComments()\n                    this.$forceUpdate()\n                })\n        },\n        rePostEssay() {\n\n        },  \n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}