{"ast":null,"code":"import axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-vue';\nexport default {\n  auth0: useAuth0,\n  name: 'SingleEssayView',\n  data() {\n    return {\n      comments: [\"default comments\"],\n      loading: true,\n      errored: false,\n      user: this.$auth0.user,\n      isAuthenticated: this.$auth0.isAuthenticated,\n      filteredComments: []\n    };\n  },\n  mounted() {\n    this.loadComments();\n    this.checkOwnership();\n  },\n  methods: {\n    loadComments() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', {\n        email: this.user.email\n      }).then(response => {\n        console.log(response.data);\n        this.comments = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n        this.parseContent();\n      });\n    },\n    filterComments() {\n      for (var i = 0; i < this.comments.length(); i++) {\n        if (this.comments[i].line_number === this.$route.params.line) this.filterComments += this.comments[i];\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,QAAO,QAAS,kBAAkB;AAG3C,eAAe;EACXC,KAAK,EAAED,QAAQ;EACfE,IAAI,EAAE,iBAAiB;EACvBC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,CAAC,kBAAkB,CAAC;MAC9BC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACD,IAAI;MACtBE,eAAe,EAAE,IAAI,CAACD,MAAM,CAACC,eAAe;MAC5CC,gBAAgB,EAAE;IACtB;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,YAAY,EAAC;IAClB,IAAI,CAACC,cAAc,EAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACLF,YAAY,GAAG;MACX,IAAI,CAACP,OAAM,GAAI,IAAG;MAClBN,KAAI,CACCgB,GAAG,CAAC,8BAA6B,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC,GAAI,WAAW,EAAE;QAACC,KAAK,EAAE,IAAI,CAACZ,IAAI,CAACY;MAAK,CAAC,EAClGC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAClB,IAAI;QACzB,IAAI,CAACC,QAAO,GAAIiB,QAAQ,CAAClB,IAAG;MAChC,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK;QACjB,IAAI,CAACnB,OAAM,GAAI,IAAG;MACtB,CAAC,EACAoB,OAAO,CAAC,MAAM;QACX,IAAI,CAACrB,OAAM,GAAI,KAAI;QACnB,IAAI,CAACsB,YAAY,EAAC;MACtB,CAAC;IACT,CAAC;IACDC,cAAc,GAAG;MACb,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACzB,QAAQ,CAAC0B,MAAM,EAAE,EAAED,CAAC,EAAE,EAAC;QAC5C,IAAI,IAAI,CAACzB,QAAQ,CAACyB,CAAC,CAAC,CAACE,WAAU,KAAM,IAAI,CAACf,MAAM,CAACC,MAAM,CAACe,IAAI,EACxD,IAAI,CAACJ,cAAa,IAAK,IAAI,CAACxB,QAAQ,CAACyB,CAAC,CAAC;MAE/C;IACJ;EACJ;AACJ","names":["axios","useAuth0","auth0","name","data","comments","loading","errored","user","$auth0","isAuthenticated","filteredComments","mounted","loadComments","checkOwnership","methods","get","$route","params","id","email","then","response","console","log","catch","error","finally","parseContent","filterComments","i","length","line_number","line"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/CommentPageView.vue"],"sourcesContent":["<template>\n    {{comments}}\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            comments: [\"default comments\"],\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n            filteredComments: [],\n        }\n    },\n    mounted() {\n        this.loadComments()\n        this.checkOwnership()\n    },\n    methods: {\n        loadComments() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', {email: this.user.email})\n                .then(response => {\n                    console.log(response.data)\n                    this.comments = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.parseContent()\n                })\n        },\n        filterComments() {\n            for (var i = 0; i < this.comments.length(); i++){\n                if (this.comments[i].line_number === this.$route.params.line)\n                    this.filterComments += this.comments[i];\n\n            }\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}