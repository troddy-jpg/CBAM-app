{"ast":null,"code":"import axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-vue';\nexport default {\n  auth0: useAuth0,\n  name: 'SingleEssayView',\n  data() {\n    return {\n      essay: {\n        title: \"\",\n        content: \"\",\n        user_email: \"\"\n      },\n      loading: true,\n      errored: false,\n      user: this.$auth0.user,\n      isAuthenticated: this.$auth0.isAuthenticated,\n      isOwner: false,\n      essayLines: {}\n    };\n  },\n  mounted() {\n    this.loadEssay();\n    this.checkOwnership();\n    this.loadComments();\n  },\n  methods: {\n    loadEssay() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id).then(response => {\n        console.log(response.data);\n        this.essay = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n        this.parseContent();\n      });\n    },\n    checkOwnership() {\n      this.isOwner = this.user.email === this.essay.user_email;\n    },\n    parseContent() {\n      this.essayLines = this.essay.content.split(\".\");\n      console.log(this.essayLines);\n    },\n    // openCommentsOnLine(lineNumber) {\n    //     console.log(lineNumber)\n    //     this.$router.push('/essay/' + this.essay.id+\"/\" + lineNumber)\n    // },\n    loadComments() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', {\n        email: this.user.email\n      }).then(response => {\n        console.log(response.data);\n        this.comments = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n        this.filterComments(0);\n      });\n    },\n    filterComments(line) {\n      this.filteredComments = [{}];\n      console.log(line);\n      console.log(\"comment \" + this.comments[0].sentence);\n      for (var k = 0; k < this.comments.length; k++) {\n        if (this.comments[k].sentence === line) this.filteredComments += this.comments[k];\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","useAuth0","auth0","name","data","essay","title","content","user_email","loading","errored","user","$auth0","isAuthenticated","isOwner","essayLines","mounted","loadEssay","checkOwnership","loadComments","methods","get","$route","params","id","then","response","console","log","catch","error","finally","parseContent","email","split","comments","filterComments","line","filteredComments","sentence","k","length"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/SingleEssayView.vue"],"sourcesContent":["<template>\n    <h1>{{essay.title}}</h1>\n    <i>modified {{essay.date_modified}}, created {{essay.date_created}}, revision {{(essay.revision + 1)}}</i>\n    <div v-for=\"(line, index) in essayLines\" :key=\"index\">\n        <span @click=\"openCommentsOnLine(index)\">{{line}}</span>\n    </div>\n    <i>Essay by {{essay.user_email}}</i>\n    <h1 v-if=\"isOwner\">owner</h1>\n    <div v-for=\"(comment) in comments\" :key=\"comment.sentence\">\n        <div v-if=\"(comment.sentence === 0)\">\n        <label>{{ comment.sentence }}</label>\n        <label> | {{ comment.content }}</label></div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            essay: { title: \"\", content:\"\", user_email:\"\"},\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n            isOwner: false,\n            essayLines: {},\n        }\n    },\n    mounted() {\n        this.loadEssay()\n        this.checkOwnership()\n        this.loadComments()\n    },\n    methods: {\n        loadEssay() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id)\n                .then(response => {\n                    console.log(response.data)\n                    this.essay = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.parseContent()\n                })\n        },\n        checkOwnership() {\n            this.isOwner= this.user.email === this.essay.user_email\n        },\n        parseContent() {\n            this.essayLines = this.essay.content.split(\".\")\n            console.log(this.essayLines)\n        },\n        // openCommentsOnLine(lineNumber) {\n        //     console.log(lineNumber)\n        //     this.$router.push('/essay/' + this.essay.id+\"/\" + lineNumber)\n        // },\n        loadComments() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id + '/comments', { email: this.user.email })\n                .then(response => {\n                    console.log(response.data)\n                    this.comments = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.filterComments(0)\n                })\n        },\n        filterComments(line) {\n            this.filteredComments = [{}]\n            console.log(line)\n            console.log(\"comment \" + this.comments[0].sentence)\n            for (var k = 0; k < this.comments.length; k++){\n                if (this.comments[k].sentence === line)\n                    this.filteredComments += this.comments[k]\n            }\n        },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}