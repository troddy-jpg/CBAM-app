{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"comments\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \" By \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \" V. \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.searchTerm = $event),\n    placeholder: \"Search by essay content,\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, this.searchTerm]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => this.searchEssays())\n  }, \"search essays\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.returnedEssays, essay => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: essay.id\n    }, [_createElementVNode(\"span\", {\n      onClick: $event => $options.singleEssay(essay.id)\n    }, [_createElementVNode(\"label\", null, \"'\" + _toDisplayString(essay.title) + \"'\", 1 /* TEXT */), _hoisted_3, _createElementVNode(\"label\", null, _toDisplayString(essay.user), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"label\", null, _toDisplayString(essay.revision), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAU;;gCAOTC,oBAAiB,cAAX,MAAI;gCAEVA,oBAAiB,cAAX,MAAI;;;uBATtBC,oBAaM,OAbNC,UAaM,mBAZFF,oBAA0E;oEAArDG,UAAU;IAAEC,WAAW,EAAC;sDAAxBD,UAAU,KAC/BH,oBAA2D;IAAlDK,OAAK,2CAAOC,YAAY;KAAI,eAAa,sBAElDL,oBAQMM,kCARoBC,cAAc,EAA5BC,KAAK;yBAAjBR,oBAQM;MARqCS,GAAG,EAAED,KAAK,CAACE;QAClDX,oBAMO;MANAK,OAAK,YAAEO,oBAAW,CAACH,KAAK,CAACE,EAAE;QAC9BX,oBAAkC,eAA3B,GAAC,oBAAGS,KAAK,CAACI,KAAK,IAAG,GAAC,iBAC1BC,UAAiB,EACjBd,oBAA+B,gCAArBS,KAAK,CAACM,IAAI,kBACpBC,UAAiB,EACjBhB,oBAAmC,gCAAzBS,KAAK,CAACQ,QAAQ","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","searchTerm","placeholder","onClick","searchEssays","_Fragment","returnedEssays","essay","key","id","$options","title","_hoisted_3","user","_hoisted_4","revision"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/views/SearchView.vue"],"sourcesContent":["<template>\n    <div class=\"comments\">\n        <input v-model=\"this.searchTerm\" placeholder=\"Search by essay content,\" />\n        <button @click=\"this.searchEssays()\">search essays</button>\n\n        <div v-for=\"essay in this.returnedEssays\" :key=\"essay.id\">\n            <span @click=\"singleEssay(essay.id)\">\n                <label>'{{ essay.title }}'</label>\n                <span> By </span>\n                <label>{{ essay.user }}</label>\n                <span> V. </span>\n                <label>{{ essay.revision }}</label>\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n\nexport default {\n    name: 'SearchView',\n    data() {\n        return {\n            returnedEssays: [],\n            searchTerm:\"\",\n        }\n    },\n    components: {\n        \n    },\n    methods: {\n        searchEssays() {\n            this.returnedEssays = []\n            axios\n                .get('http://localhost:5000/content/' + this.searchTerm)\n                .then(response => {\n                    console.log(\"returnedEssays\")\n                    console.log(response.data)\n                    this.returnedEssays = response.data\n                })\n\n        },\n        singleEssay(id) {\n            this.$router.push('/essay/' + id)\n        },\n    },\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}