{"ast":null,"code":"import axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-vue';\nexport default {\n  auth0: useAuth0,\n  name: 'SingleEssayView',\n  data() {\n    return {\n      essay: {\n        title: \"\",\n        content: \"\",\n        user_email: \"\"\n      },\n      loading: true,\n      errored: false,\n      user: this.$auth0.user,\n      isAuthenticated: this.$auth0.isAuthenticated\n    };\n  },\n  mounted() {\n    this.loadComments();\n    this.checkOwnership();\n  },\n  methods: {\n    loadComments() {\n      this.loading = true;\n      axios.get('http://localhost:5000/essay/' + this.$route.params.id + '/comments').then(response => {\n        console.log(response.data);\n        this.essay = response.data;\n      }).catch(error => {\n        console.log(error);\n        this.errored = true;\n      }).finally(() => {\n        this.loading = false;\n        this.parseContent();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,QAAO,QAAS,kBAAkB;AAG3C,eAAe;EACXC,KAAK,EAAED,QAAQ;EACfE,IAAI,EAAE,iBAAiB;EACvBC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC;MACjDC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACD,IAAI;MACtBE,eAAe,EAAE,IAAI,CAACD,MAAM,CAACC;IACjC;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAI,CAACC,YAAY,EAAC;IAClB,IAAI,CAACC,cAAc,EAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACLF,YAAY,GAAG;MACX,IAAI,CAACN,OAAM,GAAI,IAAG;MAClBT,KAAI,CACCkB,GAAG,CAAC,8BAA6B,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC,GAAI,WAAW,EACxEC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACnB,IAAI;QACzB,IAAI,CAACC,KAAI,GAAIkB,QAAQ,CAACnB,IAAG;MAC7B,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK;QACjB,IAAI,CAACjB,OAAM,GAAI,IAAG;MACtB,CAAC,EACAkB,OAAO,CAAC,MAAM;QACX,IAAI,CAACnB,OAAM,GAAI,KAAI;QACnB,IAAI,CAACoB,YAAY,EAAC;MACtB,CAAC;IACT;EACJ;AACJ","names":["axios","useAuth0","auth0","name","data","essay","title","content","user_email","loading","errored","user","$auth0","isAuthenticated","mounted","loadComments","checkOwnership","methods","get","$route","params","id","then","response","console","log","catch","error","finally","parseContent"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/CommentPageView.vue"],"sourcesContent":["<template>\n    <h1>{{  essay.title  }}</h1>\n    <i>modified {{  essay.date_modified  }}, created {{  essay.date_created  }}, revision {{  (essay.revision + 1)  }}</i>\n    <div v-for=\"(line, index) in essayLines\" :key=\"index\">\n        <span @click=\"openCommentsOnLine(index)\">{{  line  }}</span>\n    </div>\n    <i>Essay by {{  essay.user_email  }}</i>\n    <h1 v-if=\"isOwner\">owner</h1>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            essay: { title: \"\", content: \"\", user_email: \"\" },\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n        }\n    },\n    mounted() {\n        this.loadComments()\n        this.checkOwnership()\n    },\n    methods: {\n        loadComments() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id + '/comments')\n                .then(response => {\n                    console.log(response.data)\n                    this.essay = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                    this.parseContent()\n                })\n        },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}