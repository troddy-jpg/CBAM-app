{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.backToEssays && $options.backToEssays(...args))\n  }, \"Back\"), _createElementVNode(\"div\", null, _toDisplayString($data.essay.title), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString($data.essay.content), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACIA,oBAA2C;IAAlCC,OAAK,yCAAEC,uDAAY;KAAE,MAAI,GAClCF,oBAA0B,8BAAnBG,WAAK,CAACC,KAAK,kBAClBJ,oBAA4B,8BAArBG,WAAK,CAACE,OAAO","names":["_createElementVNode","onClick","$options","$data","title","content"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/SingleEssayView.vue"],"sourcesContent":["<template>\n    <button @click=\"backToEssays\">Back</button>\n    <div>{{essay.title}}</div>\n    <div>{{essay.content}}</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\nexport default {\n    auth0: useAuth0,\n    name: 'SingleEssayView',\n    data() {\n        return {\n            essay: { title: \"\", content:\"\"},\n            loading: true,\n            errored: false,\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n        }\n    },\n    mounted() {\n        this.loadEssay()\n        this.checkIfOwner()\n    },\n    methods: {\n        loadEssay() {\n            this.loading = true\n            axios\n                .get('http://localhost:5000/essay/' + this.$route.params.id)\n                .then(response => (this.essay = response.data))\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n                .finally(() => {\n                    this.loading = false\n                })\n        },\n        backToEssays() {\n            this.$router.push('/essays/')\n        },\n        checkIfOwner() {\n            axios\n                .get(\"http://localhost:5000/users\", {\n                    email: this.user.email,\n                    password: \"default\"\n                })\n                .then(() => {\n                    console.log(\"User confirmed exists\")\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.errored = true\n                })\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}