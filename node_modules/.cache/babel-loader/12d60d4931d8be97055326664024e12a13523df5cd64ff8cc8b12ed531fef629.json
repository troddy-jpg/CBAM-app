{"ast":null,"code":"import { useAuth0 } from '@auth0/auth0-vue';\nimport axios from 'axios';\nexport default {\n  auth0: useAuth0,\n  name: 'AccountView',\n  components: {},\n  data() {\n    return {\n      user: this.$auth0.user,\n      isAuthenticated: this.$auth0.isAuthenticated,\n      isLoading: this.$auth0.isLoading,\n      CBAMuser: {},\n      essays: [],\n      comments: [],\n      newCommentContent: \"\"\n    };\n  },\n  methods: {\n    getUser() {\n      axios.get(\"http://localhost:5000/user/\" + this.user.email).then(response => {\n        console.log(response.data);\n        this.CBAMuser = response.data;\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        this.getOwnedEssays();\n        this.getOwnedComments();\n      });\n    },\n    getOwnedEssays() {\n      axios.get(\"http://localhost:5000/user/\" + this.user.email + '/essays').then(response => {\n        console.log(response.data);\n        this.essays = response.data;\n      });\n    },\n    getOwnedComments() {\n      axios.get('http://localhost:5000/comments', {\n        user_email: this.user.email\n      }).then(response => {\n        console.log(response.data);\n        response.data.forEach(element => {\n          if (element.user_email === this.user.email) {\n            this.comments += element;\n          }\n        });\n      });\n    },\n    deleteComment(id) {\n      axios.delete('http://localhost:5000/comments', {\n        id: id\n      }).then(response => {\n        console.log(response.data);\n        this.comments = response.data;\n      });\n    }\n  },\n  mounted() {\n    this.getUser();\n  }\n};","map":{"version":3,"mappings":"AAwBA,SAASA,QAAO,QAAS,kBAAkB;AAC3C,OAAOC,KAAI,MAAO,OAAO;AAGzB,eAAe;EACXC,KAAK,EAAEF,QAAQ;EACfG,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE,CAEZ,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACD,IAAI;MACtBE,eAAe,EAAE,IAAI,CAACD,MAAM,CAACC,eAAe;MAC5CC,SAAS,EAAE,IAAI,CAACF,MAAM,CAACE,SAAS;MAChCC,QAAQ,EAAE,CAAC,CAAC;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,iBAAiB,EAAC;IACtB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,OAAO,GAAG;MACNd,KAAI,CACCe,GAAG,CAAE,6BAA4B,GAAI,IAAI,CAACV,IAAI,CAACW,KAAK,CAAC,CACrDC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzB,IAAI,CAACK,QAAO,GAAIS,QAAQ,CAACd,IAAG;MAChC,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK;MACrB,CAAC,EACAC,OAAO,CAAC,MAAM;QACX,IAAI,CAACC,cAAc,EAAC;QACpB,IAAI,CAACC,gBAAgB,EAAC;MAC1B,CAAC;IACT,CAAC;IACDD,cAAc,GAAG;MACbxB,KAAI,CACCe,GAAG,CAAE,6BAA4B,GAAI,IAAI,CAACV,IAAI,CAACW,KAAI,GAAI,SAAS,CAAC,CACjEC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzB,IAAI,CAACM,MAAK,GAAIQ,QAAQ,CAACd,IAAG;MAC9B,CAAC;IACT,CAAC;IACDqB,gBAAgB,GAAG;MACfzB,KAAI,CACCe,GAAG,CAAC,gCAAgC,EAAE;QAAEW,UAAU,EAAE,IAAI,CAACrB,IAAI,CAACW;MAAM,CAAC,EACrEC,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzBc,QAAQ,CAACd,IAAI,CAACuB,OAAO,CAACC,OAAM,IAAK;UAC7B,IAAIA,OAAO,CAACF,UAAS,KAAM,IAAI,CAACrB,IAAI,CAACW,KAAK,EACtC;YAAC,IAAI,CAACL,QAAO,IAAKiB,OAAO;UAAA;QACjC,CAAC,CAAC;MACN,CAAC;IACT,CAAC;IACDC,aAAa,CAACC,EAAE,EAAE;MACd9B,KAAI,CACC+B,MAAM,CAAC,gCAAgC,EAAE;QAAED,EAAE,EAACA;MAAG,CAAC,EAClDb,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzB,IAAI,CAACO,QAAO,GAAIO,QAAQ,CAACd,IAAG;MAChC,CAAC;IACT;EACJ,CAAC;EACD4B,OAAO,GAAG;IACN,IAAI,CAAClB,OAAO,EAAC;EACjB;AACJ","names":["useAuth0","axios","auth0","name","components","data","user","$auth0","isAuthenticated","isLoading","CBAMuser","essays","comments","newCommentContent","methods","getUser","get","email","then","response","console","log","catch","error","finally","getOwnedEssays","getOwnedComments","user_email","forEach","element","deleteComment","id","delete","mounted"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/views/AccountView.vue"],"sourcesContent":["<template>\n    <div v-if=\"isLoading\">Loading ...</div>\n    <div v-else>\n        <h2>User Profile</h2>\n        <pre v-if=\"isAuthenticated\">\n        <code>{{ user }}</code>\n        <code>{{ CBAMuser }}</code>\n      </pre>\n    </div>\n    <h1>Essays</h1>\n    <div v-for=\"essay in this.essays\" :key=\"essay.id\">\n        <button @click=\"this.deleteEssay(essay.id)\">Delete</button>\n        <label>{{essay.title}}</label>\n    </div>\n    <h1>Comments</h1>\n    <div v-for=\"comment in this.comments\" :key=\"comment.id\">\n        <button>edit me</button>\n        <button>delete me</button>\n        <input v-model=\"this.newCommentContent\" placeholder=\"new comment\" />\n        <label>{{comment.content}}</label>\n    </div>\n</template>\n\n<script>\nimport { useAuth0 } from '@auth0/auth0-vue';\nimport axios from 'axios';\n\n\nexport default {\n    auth0: useAuth0,\n    name: 'AccountView',\n    components: {\n        \n    },\n    data() {\n        return {\n            user: this.$auth0.user,\n            isAuthenticated: this.$auth0.isAuthenticated,\n            isLoading: this.$auth0.isLoading,\n            CBAMuser: {},\n            essays: [],\n            comments: [],\n            newCommentContent:\"\",\n        }\n    },\n    methods: {\n        getUser() {\n            axios\n                .get((\"http://localhost:5000/user/\" + this.user.email))\n                .then(response => {\n                    console.log(response.data)\n                    this.CBAMuser = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                .finally(() => {\n                    this.getOwnedEssays()\n                    this.getOwnedComments()\n                })\n        },\n        getOwnedEssays() {\n            axios\n                .get((\"http://localhost:5000/user/\" + this.user.email + '/essays'))\n                .then(response => {\n                    console.log(response.data)\n                    this.essays = response.data\n                })\n        },\n        getOwnedComments() {\n            axios\n                .get('http://localhost:5000/comments', { user_email: this.user.email })\n                .then(response => {\n                    console.log(response.data)\n                    response.data.forEach(element => {\n                        if (element.user_email === this.user.email)\n                            {this.comments += element}\n                    });\n                })\n        },\n        deleteComment(id) {\n            axios\n                .delete('http://localhost:5000/comments', { id:id })\n                .then(response => {\n                    console.log(response.data)\n                    this.comments = response.data\n                })\n        },\n    },\n    mounted() {\n        this.getUser()\n    },\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}