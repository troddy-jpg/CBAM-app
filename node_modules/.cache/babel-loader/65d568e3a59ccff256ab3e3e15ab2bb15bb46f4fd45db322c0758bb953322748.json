{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"todo_comp\",\n  data: function () {\n    return {\n      new_todo: \"\",\n      todos: [{\n        id: 1,\n        content: \"write paper\",\n        done: false\n      }, {\n        id: 2,\n        content: \"read paper\",\n        done: false\n      }, {\n        id: 3,\n        content: \"review paper\",\n        done: false\n      }]\n    };\n  },\n  computed: {\n    // the id of the new todos is the last id + 1\n    new_todo_id: function () {\n      return this.todos[this.todos.length - 1].id + 1;\n    }\n  },\n  methods: {\n    // all the methods will be replaced with REST API call later\n    remove_todo: function (index) {\n      this.todos.splice(index, 1);\n    },\n    add_todo: function () {\n      this.todos.push({\n        id: this.new_todo_id,\n        content: this.new_todo,\n        done: false\n      });\n    },\n    // this is to update data to backend\n    update_todo: function (todo) {\n      console.log(\"new value:\");\n      console.log(todo.id);\n      console.log(todo.content);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqBA,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,YAAY;IACd,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,CACH;QAAEC,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,aAAa;QAAEC,IAAI,EAAE;MAAM,CAAC,EAC9C;QAAEF,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAM,CAAC,EAC7C;QAAEF,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAM;IAEtD,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACN;IACAC,WAAW,EAAE,YAAY;MACrB,OAAO,IAAI,CAACL,KAAK,CAAC,IAAI,CAACA,KAAK,CAACM,MAAK,GAAI,CAAC,CAAC,CAACL,EAAC,GAAI,CAAC;IACnD;EACJ,CAAC;EACDM,OAAO,EAAE;IACL;IACAC,WAAW,EAAE,UAAUC,KAAK,EAAE;MAC1B,IAAI,CAACT,KAAK,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC/B,CAAC;IACDE,QAAQ,EAAE,YAAY;MAClB,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC;QACZX,EAAE,EAAE,IAAI,CAACI,WAAW;QACpBH,OAAO,EAAE,IAAI,CAACH,QAAQ;QACtBI,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC;IACD;IACAU,WAAW,EAAE,UAAUC,IAAI,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACF,IAAI,CAACb,EAAE,CAAC;MACpBc,OAAO,CAACC,GAAG,CAACF,IAAI,CAACZ,OAAO,CAAC;IAC7B;EACJ;AACJ,CAAC","names":["name","data","new_todo","todos","id","content","done","computed","new_todo_id","length","methods","remove_todo","index","splice","add_todo","push","update_todo","todo","console","log"],"sourceRoot":"","sources":["/Users/trevs/Schoolwork/CBAM-app/src/components/todo-comp.vue"],"sourcesContent":["<template>\n    <div id=\"todos-vue\">\n        <div>\n            <label>New task:</label>\n            <!-- use v-model for 2-way binding, call method when user press enter @keyup.enter-->\n            <input id=\"new_todo\" v-model=\"new_todo\" placeholder=\"edit me\" @keyup.enter=\"add_todo()\">\n            <button @click=\"add_todo()\">Add</button>\n        </div>\n        <div>\n            <div v-for=\"(todo, index) in todos\" :key=\"todo.id\">\n                <label>{{ index }}.</label>\n                <!-- we also want to be able to directly update the existing todo, this is handled by v-model, but our database needs to be handled differently-->\n                <input v-model=\"todo.content\" :disabled=\"todo.done\" @keyup.enter=\"update_todo(todo)\">\n                <!-- when click the checkbox, the input becomes disabled -->\n                <input type=\"checkbox\" v-model=\"todo.done\">\n                <button @click=\"remove_todo(index)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"todo_comp\",\n    data: function () {\n        return {\n            new_todo: \"\",\n            todos: [\n                { id: 1, content: \"write paper\", done: false },\n                { id: 2, content: \"read paper\", done: false },\n                { id: 3, content: \"review paper\", done: false }\n            ]\n        };\n    },\n    computed: {\n        // the id of the new todos is the last id + 1\n        new_todo_id: function () {\n            return this.todos[this.todos.length - 1].id + 1;\n        }\n    },\n    methods: {\n        // all the methods will be replaced with REST API call later\n        remove_todo: function (index) {\n            this.todos.splice(index, 1);\n        },\n        add_todo: function () {\n            this.todos.push({\n                id: this.new_todo_id,\n                content: this.new_todo,\n                done: false\n            });\n        },\n        // this is to update data to backend\n        update_todo: function (todo) {\n            console.log(\"new value:\");\n            console.log(todo.id);\n            console.log(todo.content);\n        }\n    }\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}